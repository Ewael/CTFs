     (((((((((((flag[0x14] ^ 0x2b) == flag[7]) &&
             ((int)(char)flag[0x15] - (int)(char)flag[3] == -0x14)) && ((char)flag[2] >> 6 == '\0'))
           && ((flag[0xd] == 0x74 && (((int)(char)flag[0xb] & 0x3fffffffU) == 0x5f)))) &&
          ((bVar2 = (byte)((char)flag[0x11] >> 7) >> 5,
           (int)(char)flag[7] >> ((flag[0x11] + bVar2 & 7) - bVar2 & 0x1f) == 5 &&
           (((flag[6] ^ 0x53) == flag[0xe] && (flag[8] == 0x7a)))))) &&
         ((bVar2 = (byte)((char)flag[9] >> 7) >> 5,
          (int)(char)flag[5] << ((flag[9] + bVar2 & 7) - bVar2 & 0x1f) == 0x188 &&
          (((((int)(char)flag[0x10] - (int)(char)flag[7] == 0x14 &&
             (bVar2 = (byte)((char)flag[0x17] >> 7) >> 5,
             (int)(char)flag[7] << ((flag[0x17] + bVar2 & 7) - bVar2 & 0x1f) == 0xbe)) &&
            ((int)(char)flag[2] - (int)(char)flag[7] == -0x2b)) &&
           (((flag[0x15] == 0x5f && ((flag[2] ^ 0x47) == flag[3])) &&
            ((*flag == 99 && ((flag[0xd] == 0x74 && ((flag[0x14] & 0x45) == 0x44)))))))))))) &&
        ((flag[8] & 0x15) == 0x10)) &&
       (((flag[0xc] == 0x5f && ((char)flag[4] >> 4 == '\a')) && (flag[0xd] == 0x74)))) &&
      (((((bVar2 = (byte)((char)*flag >> 7) >> 5,
          (int)(char)*flag >> ((*flag + bVar2 & 7) - bVar2 & 0x1f) == 0xc && (flag[10] == 0x5f)) &&
         ((((int)(char)flag[8] & 0xacU) == 0x28 &&
          ((flag[0x10] == 0x73 && ((flag[0x16] & 0x1d) == 0x18)))))) &&
        ((flag[9] == 0x33 &&
         ((((flag[5] == 0x31 && (((int)(char)flag[0x13] & 0x3fffffffU) == 0x72)) &&
           ((char)flag[0x14] >> 6 == '\x01')) && (((char)flag[7] >> 1 == '/' && (flag[1] == 0x6c))))
         )))) && (((((((char)flag[3] >> 4 == '\a' &&
                      (((flag[0x13] & 0x49) == 0x40 && (flag[4] == 0x73)))) &&
                     ((flag[0xb] & flag[2]) == 0x14)) &&
                    (((((*flag == 99 && ((int)(char)flag[5] + (int)(char)flag[4] == 0xa4)) &&
                       (((int)(char)flag[0xf] & 0x3ffffffU) == 0x5f)) &&
                      ((((flag[10] ^ 0x2b) == flag[0x11] && ((flag[0xc] ^ 0x2c) == flag[4])) &&
                       (((int)(char)flag[0x13] - (int)(char)flag[0x15] == 0x13 &&
                        ((flag[0xc] == 0x5f && (flag[0xc] == 0x5f)))))))) &&
                     ((char)flag[0xf] >> 1 == '/')))) &&
                   (((flag[0x13] == 0x72 && ((int)(char)flag[0x12] + (int)(char)flag[0x11] == 0xa8))
                    && (flag[0x16] == 0x3a)))) &&
                  (((flag[0x15] & flag[0x17]) == 9 &&
                   (bVar2 = (byte)((char)flag[0x13] >> 7) >> 5,
                   (int)(char)flag[6] << ((flag[0x13] + bVar2 & 7) - bVar2 & 0x1f) == 0x18c))))))))
     && (((((((int)(char)flag[7] + (int)(char)flag[3] == 0xd2 &&
             ((((int)(char)flag[0x16] & 0xedU) == 0x28 && (((int)(char)flag[0xc] & 0xacU) == 0xc))))
            && ((flag[0x12] ^ 0x6b) == flag[0xf])) &&
           ((((((((flag[0x10] & 0x7a) == 0x72 && ((*flag & 0x39) == 0x21)) &&
                ((flag[6] ^ 0x3c) == flag[0x15])) && ((flag[0x14] == 0x74 && (flag[0x13] == 0x72))))
              && (flag[0xc] == 0x5f)) &&
             (((flag[2] == 0x34 && (flag[0x17] == 0x29)) &&
              ((flag[10] == 0x5f &&
               ((((flag[9] & flag[0x16]) == 0x32 &&
                 ((int)(char)flag[2] + (int)(char)flag[3] == 0xa7)) &&
                ((int)(char)flag[0x11] - (int)(char)flag[0xe] == 0x44)))))))) &&
            (((flag[0x15] == 0x5f && ((flag[0x13] ^ 0x2d) == flag[10])) &&
             ((((int)(char)flag[0xc] & 0x3fffffffU) == 0x5f &&
              (((((flag[6] & 0x40) != 0 && ((flag[0x16] & flag[0xc]) == 0x1a)) &&
                ((bVar2 = (byte)((char)flag[0x13] >> 7) >> 5,
                 (int)(char)flag[7] << ((flag[0x13] + bVar2 & 7) - bVar2 & 0x1f) == 0x17c &&
                 ((((flag[0x14] ^ 0x4e) == flag[0x16] && (flag[6] == 99)) && (flag[0xc] == flag[7]))
                 )))) && (((int)(char)flag[0x13] - (int)(char)flag[0xd] == -2 &&
                          ((char)flag[0xe] >> 4 == '\x03')))))))))))) &&
          (((flag[0xc] & 0x38) == 0x18 &&
           (((bVar2 = (byte)((char)flag[10] >> 7) >> 5,
             (int)(char)flag[8] << ((flag[10] + bVar2 & 7) - bVar2 & 0x1f) == 0x3d00 &&
             (flag[0x14] == 0x74)) &&
            ((bVar2 = (byte)((char)flag[0x16] >> 7) >> 5,
             (int)(char)flag[6] >> ((flag[0x16] + bVar2 & 7) - bVar2 & 0x1f) == 0x18 &&
             (((((int)(char)flag[0x16] - (int)(char)flag[5] == 9 &&
                (bVar2 = (byte)((char)flag[0x16] >> 7) >> 5,
                (int)(char)flag[7] << ((flag[0x16] + bVar2 & 7) - bVar2 & 0x1f) == 0x17c)) &&
               (flag[0x16] == 0x3a)) &&
              ((flag[0x10] == 0x73 && ((flag[0x17] ^ 0x1d) == flag[0x12])))))))))))) &&
         ((((int)(char)flag[0xe] + (int)(char)flag[0x17] == 0x59 &&
           (((flag[2] & flag[5]) == 0x30 && (((int)(char)flag[0xf] & 0x9fU) == 0x1f)))) &&
          ((flag[4] == 0x73 && (((flag[0x17] ^ 0x4a) == *flag && ((flag[6] ^ 0x3c) == flag[0xb])))))
          )))))
